@startuml

title Class diagram which models a class and interface

package model.class <<folder>> {


	package model.class.package <<folder>> {
		class Package {
		}
	}
	
	package model.class.class <<folder>> {
		 
		 class A_class {
		  - name : String
		}	
	}
	
	package model.class.interface <<folder>> {
		class An_Interface {
		}
	}
	
	
	package model.class.typedElement <<folder>> {
		
		class Attribute {
		}
		
		class Method {
		}
		
		class Parameter {
		}
		
		abstract class TypedElement{
			- name : String
		}
		
		abstract class VisibleTypedElement {
		}
	}
	
	
	
	package model.class.type <<folder>> {
		abstract class Type{
		}
		
		abstract class TypeBase{
		 	- ByteSize : int
		}
		
		class Int {
		}
		
		class Double {
		}
		
		class Float {
		}
		
		class Boolean {
		}	
	}
	
	Boolean --|> TypeBase
	Float --|> TypeBase
	Double --|> TypeBase
	Int --|> TypeBase
	
	TypeBase --|> Type
	
	TypedElement  " " --* "1" Type
	
	
	package model.class.visibility <<folder>> {
		
		abstract class Visibility{
			- name : String
		}
		
		class Private {
		}
		
		class Public {
		}
		
		class Protected {
		}
	}
	
	Private --|> Visibility
	Public --|> Visibility
	Protected --|> Visibility
	
	VisibleTypedElement --|> TypedElement
	Parameter --|> TypedElement
	
	Method --|> VisibleTypedElement
	Attribute --|> VisibleTypedElement
	VisibleTypedElement " " --* "1" Visibility
	
	
	A_class --|> Type
	A_class "1..*" --* "1" Package
	An_Interface "1..*" --* "1" Package
	A_class "1" *-- "1..*" Attribute
	A_class "1" *-- "1..*" Method
	
	An_Interface "1..*" *-- "1" Method
	
	Method "1..*" *-- "1" Parameter

	abstract class Meta{
			- name : String
	}
		
	Type --|> Meta
	An_Interface --|> Meta	
	
}






@enduml