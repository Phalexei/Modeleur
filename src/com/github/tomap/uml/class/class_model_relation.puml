@startuml

title Class diagram which models relations

package model.class <<folder>> {

	package model.class.class <<folder>> {
		 
		 class A_class {
		  - name : String
		}
		 class Type {
		  - name : String
		}
	}
	package model.class.interface <<folder>> {
		class An_Interface {
		  - name : String
		}
	}
	
	An_Interface --|> Type
	A_class --|> Type

	package model.class.relation <<folder>> {
			
			abstract class Relation{
				- title : String
			}
			
			abstract class BinaryRelation{
			}
			
			class N_Relation{
			}
			
			note top of Generalization : forbidden : \n class extends interface\n interface extends class
			class Generalization {
			}	
		
			class Agregation {
			}
			
			class Composition {
			}

			class SimpleRelation {
			}
			
			class Implementation {
			}
			
			class Association {
			}
						
		}
		Association" " --* "1" Relation
		Association " " --> "1" A_class
		
		N_Relation --|> Relation
		N_Relation " " --> "1 from" A_class
		
		
		BinaryRelation --|> Relation
		
		BinaryRelation " " --> "1 from" A_class
		BinaryRelation " " --> "1 to" A_class
		
		Generalization " " -->"from 1" Type
		Generalization " " -->"                 1 to" Type
			
		SimpleRelation --|> BinaryRelation
		Agregation --|> BinaryRelation
		Composition --|> BinaryRelation
		
		Implementation " " --> "1" An_Interface
		Implementation " " --> "1" A_class
		
		
		
		
		package model.class.multiplicity <<folder>> {
			Abstract class Multiplicity{
			}
			
			class SingleMultiplicity{
				- value : int
				- attributeName : String
			}	
			
			class DoubleMultiplicity{
				- maxValue : int
			}
			
			class NoMultiplicity{
			}	
		}
		
		SingleMultiplicity --|> Multiplicity
		DoubleMultiplicity --|> SingleMultiplicity
		NoMultiplicity --|> Multiplicity
		(N_Relation, A_class) .. Multiplicity
		(BinaryRelation, A_class) .. Multiplicity
		(BinaryRelation, A_class) .. Multiplicity
}



@enduml