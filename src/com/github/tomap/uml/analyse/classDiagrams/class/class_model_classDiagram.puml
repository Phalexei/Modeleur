@startuml

title Class diagram which models a class and interface



package model.class <<folder>> {

	package model.class.package <<folder>> {
		class A_Package {
		 - name : String
		}
	}

	package model.class.class <<folder>> {

		 class A_class {
		  - isFinal : boolean
		  - isStatic : boolean
		  - isAbstract : boolean
		}
	}

	package model.class.interface <<folder>> {
		class An_Interface {

		}
	}


	package model.class.typedElement <<folder>> {

		class Attribute {
			- isDerivated : boolean
		}

		class Method {
			- isAbstract : boolean
		}

		class Parameter {

		}

		abstract class TypedElement{
			# name : String
			# isFinal : boolean
		}

		abstract class VisibleTypedElement {
			# isStatic : boolean
		}
	}



	package model.class.type <<folder>> {
		abstract class Type{
			# name : String
		}

		abstract class TypeBase{
		 	- ByteSize : int
		}

		class Integer {

		}

		class Double {

		}

		class Float {

		}

		class Void {

		}

		class Boolean {

		}

		class AString {

		}
	}

	Boolean --|> TypeBase
	Float --|> TypeBase
	Double --|> TypeBase
	Integer --|> TypeBase
	Void --|> TypeBase
	AString --|> TypeBase

	TypeBase --|> Type

	TypedElement  " " --* "1 type" Type
	Attribute  " " --* "1 typeB {redefine type}" TypeBase


	package model.class.visibility <<folder>> {

		abstract class Visibility{
			- name : String
		}

		class Private {

		}

		class Public {

		}

		class Protected {

		}

		class Package {

		}
	}

	Private --|> Visibility
	Public --|> Visibility
	Protected --|> Visibility
	Package --|> Visibility

	VisibleTypedElement --|> TypedElement
	Parameter --|> TypedElement

	Method --|> VisibleTypedElement
	Attribute --|> VisibleTypedElement
	VisibleTypedElement " " --* "1" Visibility


	A_class --|> Type
	A_class "1..*" --* "1" A_Package
	An_Interface "1..*" --* "1" A_Package
	A_class "1" *-- "1..*" Attribute
	A_class "1" *-- "1..*" Method

	An_Interface "1..*" *-- "1" Method

	Method "1..*" *-- "1" Parameter

	An_Interface --|> Type

}






@enduml